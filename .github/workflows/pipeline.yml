# The name of the workflow.
name: Build and Deploy

# Run the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

# Set environment variables
env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
  EMAIL: ${{ secrets.EMAIL }}
  PASSWORD: ${{ secrets.PASSWORD }}
  MONGO_URL: ${{ secrets.MONGO_URL }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  PORT: ${{ secrets.PORT }}
  CHAPA_AUTH_KEY: ${{ secrets.CHAPA_AUTH_KEY }}
  EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

# This is the workflow that is being run.
jobs:
  build-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Install dependencies and run tests for the client application
      - name: Install and Test Client
        working-directory: ./admin
        run: |
          npm install --legacy-peer-deps
          npm run test

      # Install dependencies, export environment variables to be used by application and run tests for the server application
      - name: Install and Test Server
        working-directory: ./api
        run: |
          npm install --legacy-peer-deps
          export MONGODB_URI=$MONGODB_URI
          export TOKEN_KEY=$TOKEN_KEY
          export EMAIL=$EMAIL
          export PASSWORD=$PASSWORD
          export MONGO_URL=$MONGO_URL
          export SECRET_KEY=$SECRET_KEY
          export PORT=$PORT
          export CHAPA_AUTH_KEY=$CHAPA_AUTH_KEY
          export EMAIL_USERNAME=$EMAIL_USERNAME
          export EMAIL_PASSWORD=$EMAIL_PASSWORD
          export FIREBASE_SERVICE_ACCOUNT=$FIREBASE_SERVICE_ACCOUNT
          npm run test

      # Build a Docker image for the client application
      - name: Build Client Docker Image
        working-directory: ./admin
        # Build image with tag ephab/ethio-movie-app:client
        run: |
          docker build -t ephab/ethio-movie-app:client-${{github.run_number}} .

      # Build a Docker image for the server application
      - name: Build Server Docker Image
        working-directory: ./api
        # Build image with tag ephab/ethio-movie-app:server
        run: |
          docker build -t ephab/ethio-movie-app:server-${{github.run_number}} .

      # Login to Docker Hub using credentials from repository secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run: |
          docker push ephab/ethio-movie-app:client-${{github.run_number}}
          docker push ephab/ethio-movie-app:server-${{github.run_number}}
